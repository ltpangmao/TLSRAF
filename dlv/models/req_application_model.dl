task(collect_appliance_info).
task(send_price_info_to_hems).
task(receive_energy_consumption_data_from_sma).
task(send_measurement_requests__to_sma).
goal(be_able_to_communicate_with_sm).
goal(query_service_is_provided).
task(respond_to_request_from_essa).
task(retrieve__data_from_database).
task(send_energy_consumption_data_to_essa).
task(receive__requests_from_essa).
task(communicate_with_essa).
actor(smart_appliance_application).
application(smart_appliance_application).
has(smart_appliance_application,send_appliance_info_to_hems).
has(smart_appliance_application,appliance_info_is_monitored_by_hems).
has(smart_appliance_application,execute_remote_control_command).
has(smart_appliance_application,be_able_to_be_controlled_by_hems).
has(smart_appliance_application,empty).
has(smart_appliance_application,can_be_remotely_monitored_and_controlled).

actor(home_energy_management_system).
application(home_energy_management_system).
has(home_energy_management_system,collect_appliance_info).
has(home_energy_management_system,d).
has(home_energy_management_system,remote_control_component).
has(home_energy_management_system,saa_are_controled).
has(home_energy_management_system,empty).
has(home_energy_management_system,status_information_is_obtained).
has(home_energy_management_system,support_execute_adjustment_policy).
has(home_energy_management_system,execute_policies).
has(home_energy_management_system,policies_can_be_created_and_edited).
has(home_energy_management_system,empty).
has(home_energy_management_system,policy_can_be_executed).
has(home_energy_management_system,manage__policies).
has(home_energy_management_system,communicate_with_essa).
has(home_energy_management_system,be_able_to_communicate_with_saa).
has(home_energy_management_system,support_customer_communicates_with_es).

actor(smart_meter_application).
application(smart_meter_application).
has(smart_meter_application,send_energy_consumption_data_to_essa).
has(smart_meter_application,receive__requests_from_essa).
has(smart_meter_application,empty).
has(smart_meter_application,communicate_with_essa).
has(smart_meter_application,smart_meter_application).
has(smart_meter_application,measure_energy_consumption).
has(smart_meter_application,energy_consumption_data_is_stored).
has(smart_meter_application,empty).
has(smart_meter_application,energy_consumption_data_is_obtained).
has(smart_meter_application,store_energy_consumption_data).
has(smart_meter_application,support_measure_energy_consumption).
has(smart_meter_application,be_able_to_send_messages_to_es).

task(send_appliance_info_to_hems).
goal(appliance_info_is_monitored_by_hems).
task(execute_remote_control_command).
goal(be_able_to_be_controlled_by_hems).
goal(can_be_remotely_monitored_and_controlled).
task(remote_control_component).
goal(saa_are_controled).
goal(status_information_is_obtained).
goal(support_execute_adjustment_policy).
task(execute_policies).
goal(policies_can_be_created_and_edited).
goal(policy_can_be_executed).
task(manage__policies).
task(communicate_with_essa).
goal(be_able_to_communicate_with_saa).
goal(support_customer_communicates_with_es).
task(measure_energy_consumption).
goal(energy_consumption_data_is_stored).
goal(energy_consumption_data_is_obtained).
task(store_energy_consumption_data).
goal(support_measure_energy_consumption).
actor(energy_supplier_server_application).
application(energy_supplier_server_application).
has(energy_supplier_server_application,d).
has(energy_supplier_server_application,send_price_info_to_hems).
has(energy_supplier_server_application,receive_energy_consumption_data_from_sma).
has(energy_supplier_server_application,send_measurement_requests__to_sma).
has(energy_supplier_server_application,empty).
has(energy_supplier_server_application,be_able_to_communicate_with_sm).
has(energy_supplier_server_application,retrieve__data_from_database).
has(energy_supplier_server_application,generate__price).
has(energy_supplier_server_application,new_price_is_generated).
has(energy_supplier_server_application,_history_price_is_obtained).
has(energy_supplier_server_application,empty).
has(energy_supplier_server_application,communicate_with_sma).
has(energy_supplier_server_application,price_can_be_sent_to_customer).
has(energy_supplier_server_application,support_calculate_price).

task(generate__price).
goal(new_price_is_generated).
goal(_history_price_is_obtained).
task(communicate_with_sma).
goal(price_can_be_sent_to_customer).
goal(be_able_to_send_messages_to_es).
goal(support_calculate_price).
depend(home_energy_management_system,energy_supplier_server_application,send_price_info_to_hems).
depend(home_energy_management_system,smart_appliance_application,send_appliance_info_to_hems).
depend(smart_meter_application,energy_supplier_server_application,send_measurement_requests__to_sma).
depend(energy_supplier_server_application,smart_meter_application,send_energy_consumption__data_to_essa).
and_refine(send_measurement_requests__to_sma,communicate_with_sma).
and_refine(receive_energy_consumption_data_from_sma,communicate_with_sma).
operationalize(respond_to_request_from_essa,query_service_is_provided).
and_refine(send_energy_consumption_data_to_essa,communicate_with_essa).
and_refine(receive__requests_from_essa,communicate_with_essa).
and_refine(status_information_is_obtained,be_able_to_communicate_with_saa).
depend(smart_appliance_application,home_energy_management_system,remote_control_component).
operationalize(send_appliance_info_to_hems,appliance_info_is_monitored_by_hems).
operationalize(execute_remote_control_command,be_able_to_be_controlled_by_hems).
and_refine(appliance_info_is_monitored_by_hems,can_be_remotely_monitored_and_controlled).
and_refine(be_able_to_be_controlled_by_hems,can_be_remotely_monitored_and_controlled).
operationalize(remote_control_component,saa_are_controled).
operationalize(collect_appliance_info,status_information_is_obtained).
and_refine(saa_are_controled,be_able_to_communicate_with_saa).
operationalize(execute_policies,policy_can_be_executed).
and_refine(policy_can_be_executed,support_execute_adjustment_policy).
support(support_execute_adjustment_policy,execute_adjustment_policy).
and_refine(policies_can_be_created_and_edited,support_execute_adjustment_policy).
operationalize(manage__policies,policies_can_be_created_and_edited).
support(support_customer_communicates_with_es,es_sends_price_to_customer).
support(be_able_to_communicate_with_saa,control_smart_appliances).
support(be_able_to_communicate_with_saa,collect_smart_appliance_info).
operationalize(communicate_with_essa,support_customer_communicates_with_es).
support(support_measure_energy_consumption,measure_energy_consumption).
support(be_able_to_send_messages_to_es,sends_energy_consumption_data_to_es).
operationalize(measure_energy_consumption,energy_consumption_data_is_obtained).
operationalize(communicate_with_essa,be_able_to_send_messages_to_es).
and_refine(energy_consumption_data_is_stored,support_measure_energy_consumption).
and_refine(energy_consumption_data_is_obtained,support_measure_energy_consumption).
operationalize(store_energy_consumption_data,energy_consumption_data_is_stored).
depend(energy_supplier_server_application,provide_database_service,).
operationalize(send_price_info_to_hems,price_can_be_sent_to_customer).
operationalize(retrieve__data_from_database,_history_price_is_obtained).
operationalize(generate__price,new_price_is_generated).
and_refine(_history_price_is_obtained,support_calculate_price).
and_refine(new_price_is_generated,support_calculate_price).
operationalize(communicate_with_sma,be_able_to_communicate_with_sm).
support(price_can_be_sent_to_customer,es_sends_price__to_customer).
support(be_able_to_communicate_with_sm,receive_energy_consumption_data_from_sm).
support(support_calculate_price,calculate_price).

